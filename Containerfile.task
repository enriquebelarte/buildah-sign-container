# Konflux does not only support running builds in containers locally but also supports running builds
# in remote VMs with the multi-platform controller. In order to simplify the specification of build
# targets, however, we are adding support for the multi-platform controller to also be able to build
# in-cluseter with the tasks focused on building remotely. Therefore, we need to maintain a buildah image
# for our tasks that has more than _just_ buildah in it. We also need to add the required functionality
# for the remote builds.

FROM registry.fedoraproject.org/fedora-minimal:40 AS dockerfile-json-builder

ARG BUILDER_RPMS="golang"
RUN microdnf install -y $BUILDER_RPMS

ENV GOPROXY='https://proxy.golang.org,direct'
ENV GOSUMDB='sum.golang.org'

WORKDIR /app
COPY dockerfile-json .
RUN go build -o dockerfile-json

FROM quay.io/centos/centos:stream9 AS sdk-builder
ARG AWS_SDK_CPP_VERSION=1.11.463
# Install packages
RUN INSTALL_PKGS="clang unzip cmake zlib-devel openssl-devel libcurl-devel git p11-kit-devel json-c-devel" \
    && dnf config-manager --set-enabled crb \
    && dnf install -y --setopt=tsflags=nodocs $INSTALL_PKGS \
    && dnf clean all \
    && rm -rf /var/cache/yum
# Install AWS SDK C++ 
RUN curl -o ~/aws-sdk-cpp.tar.gz -L https://github.com/aws/aws-sdk-cpp/archive/$AWS_SDK_CPP_VERSION.tar.gz && \
    mkdir ~/aws-sdk-cpp-src && \
    tar -C ~/aws-sdk-cpp-src --strip-components=1 -zxf ~/aws-sdk-cpp.tar.gz && \
    cd ~/aws-sdk-cpp-src && ./prefetch_crt_dependency.sh && \
    mkdir ~/aws-sdk-cpp-src/sdk_build && \
    cd ~/aws-sdk-cpp-src/sdk_build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_ONLY="kms;acm-pca" -DENABLE_TESTING=OFF -DCMAKE_INSTALL_PREFIX=$HOME/aws-sdk-cpp -DBUILD_SHARED_LIBS=OFF && \
    make && make install 
# Clone PKCS11 implementation to use AWS KMS as backend
RUN git clone https://github.com/JackOfMostTrades/aws-kms-pkcs11.git && \
    cd aws-kms-pkcs11 && \
    AWS_SDK_PATH=~/aws-sdk-cpp make


FROM quay.io/redhat-user-workloads/rhtap-build-tenant/buildah-container/buildah@sha256:391ce6bd8652a81d1237d4aec46acabec0a6b61f9a7ea94a16ffa1a40d759378

ARG INSTALL_RPMS="rsync openssh-clients kubernetes-client jq iproute subscription-manager openssl openssl-pkcs11 unzip kernel-devel podman"
RUN microdnf install -y $INSTALL_RPMS && \
    microdnf -y clean all && \
    rm -rf /var/cache /var/log/dnf* /var/log/yum.*
COPY --from=sdk-builder /aws-kms-pkcs11/aws_kms_pkcs11.so /usr/lib64/pkcs11/
COPY --from=dockerfile-json-builder /app/dockerfile-json /usr/bin
